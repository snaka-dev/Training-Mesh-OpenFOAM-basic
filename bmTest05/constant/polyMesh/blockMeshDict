/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 convertToMeters 1;

vertices 
(
    (0.0  0.0   0.0)  // 0
    (0.02 0.0   0.0)  // 1
    (0.03 0.0   0.0)  // 2
    (0.1  0.0   0.0)  // 3

    (0.0  0.02  0.0)  // 4
    (0.02 0.02  0.0)  // 5
    (0.03 0.02  0.0)  // 6
    (0.1  0.02  0.0)  // 7

    (0.0  0.03  0.0)  // 8
    (0.02 0.03  0.0)  // 9
    (0.03 0.03  0.0)  // 10
    (0.1  0.03  0.0)  // 11

    (0.0  0.05  0.0)  // 12
    (0.02 0.05  0.0)  // 13
    (0.03 0.05  0.0)  // 14
    (0.1  0.05  0.0)  // 15

    (0.0  0.0   0.0)  // 16 dummy
    (0.0  0.0   0.0)  // 17 dummy
    (0.0  0.0   0.0)  // 18 dummy
    (0.0  0.0   0.0)  // 19 dummy

    (0.0  0.0   0.01)  // 20
    (0.02 0.0   0.01)  // 21
    (0.03 0.0   0.01)  // 22
    (0.1  0.0   0.01)  // 23

    (0.0  0.02  0.01)  // 24
    (0.02 0.02  0.01)  // 25
    (0.03 0.02  0.01)  // 26
    (0.1  0.02  0.01)  // 27

    (0.0  0.03  0.01)  // 28
    (0.02 0.03  0.01)  // 29
    (0.03 0.03  0.01)  // 30
    (0.1  0.03  0.01)  // 31

    (0.0  0.05  0.01)  // 32
    (0.02 0.05  0.01)  // 33
    (0.03 0.05  0.01)  // 34
    (0.1  0.05  0.01)  // 35

);

blocks
(
    hex (0 1 5 4      20 21 25 24) (8  8 4) simpleGrading (0.5 0.5 1)
    hex (1 2 6 5      21 22 26 25) (8  8 4) simpleGrading (1   0.5 1)
    hex (2 3 7 6      22 23 27 26) (28 8 4) simpleGrading (2   0.5 1)

    hex (4 5 9 8      24 25 29 28) (8  4 4) simpleGrading (0.5 1 1)
    //hex (5 6 10 9     25 26 30 29) (8  4 4) simpleGrading (1 1 1)
    hex (6 7 11 10    26 27 31 30) (28 4 4) simpleGrading (2   1 1)

    hex (8 9 13 12    28 29 33 32) (8  8 4) simpleGrading (0.5 2 1)
    hex (9 10 14 13   29 30 34 33) (8  8 4) simpleGrading (1   2 1)
    hex (10 11 15 14  30 31 35 34) (28 8 4) simpleGrading (2   2 1)
);

edges
(
    //use arc edges on cylinder xMin
    //arc  5  9 (0.017 0.025 0)   //zMin plane
    //arc 25 29 (0.017 0.025 0.01) //zMax plane

    //use arc edges on cylinder yMax
    arc  9 10 (0.025 0.033 0)     //zMin plane
    arc 29 30 (0.025 0.033 0.01)  //zMax plane

    //use simple spline on yMin
    //spline  2  3 ( (0.04 0.005 0)     (0.05 0.0055 0)     (0.08 0.0025 0)    )
    //spline 22 23 ( (0.04 0.005 0.01)  (0.05 0.0055 0.01)  (0.08 0.0025 0.01) )
);

boundary
(
    xMin
    {
        type patch;
        faces
        (
            (0 4 24 20)
            (4 8 28 24)
            (8 12 32 28)
        );
    }
    xMax
    {
        type patch;
        faces
        (
            (3 7 27 23)
            (7 11 31 27)
            (11 15 35 31)
        );
    }
    yMin
    {
        type wall;
        faces
        (
            (0 1 21 20)
            (1 2 22 21)
            (2 3 23 22)
        );
    }
    yMax
    {
        type wall;
        faces
        (
            (12 13 33 32)
            (13 14 34 33)
            (14 15 35 34)
        );
    }
    zMin
    {
        type cyclic;
        neighbourPatch zMax;
        faces
        (
            (0 1 5 4)
            (1 2 6 5)
            (2 3 7 6)
            (4 5 9 8)
            //(5 6 10 9)
            (6 7 11 10)
            (8 9 13 12)
            (9 10 14 13)
            (10 11 15 14)
        );
    }
    zMax
    {
        type cyclic;
        neighbourPatch zMin;
        faces
        (
            (20 21 25 24)
            (21 22 26 25)
            (22 23 27 26)
            (24 25 29 28)
            //(25 26 30 29)
            (26 27 31 30)
            (28 29 33 32)
            (29 30 34 33)
            (30 31 35 34)
        );
    }
    cylinder
    {
        type wall;
        faces
        (
            (5 6 26 25)
            (6 10 30 26)
            (9 10 30 29)
            (5 9 29 25)
        );
    }
);

// ************************************************************************* //


