/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 convertToMeters 1;

//- number of mesh
nX 40;
nY 20;
nZ 4;

//- minimum coordinate [m]
_xMin 0.0;
_yMin 0.0;
_zMin 0.0;

//- length of calc domain: base length [m]
base 0.010;  // 10 mm
//- length of calc domain: coefficient 
CLX 10.0;
CLY 5.0;
CLZ 1.0;

//- maximum coordinate [m]
_xMax #calc "$_xMin + $CLX*$base" ;
_yMax #calc "$_yMin + $CLY*$base" ;
_zMax #calc "$_zMin + $CLZ*$base" ;

vertices 
(
    ($_xMin $_yMin $_zMin)  // 0
    ($_xMax $_yMin $_zMin)  // 1
    ($_xMax $_yMax $_zMin)  // 2
    ($_xMin $_yMax $_zMin)  // 3
    
    ($_xMin $_yMin $_zMax)  // 4
    ($_xMax $_yMin $_zMax)  // 5
    ($_xMax $_yMax $_zMax)  // 6
    ($_xMin $_yMax $_zMax)  // 7
);

blocks
(
    hex (0 1 2 3  4 5 6 7) ($nX $nY $nZ) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    xMin
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    xMax
    {
        type patch;
        faces
        (
            (1 2 6 5)
        );
    }
    yMin
    {
        type wall;
        faces
        (
            (3 2 1 0)
        );
    }
    yMax
    {
        type wall;
        faces
        (
            (4 5 6 7)
        );
    }
    zMin
    {
        type cyclic;
        neighbourPatch zMax;
        faces
        (
            (0 1 5 4)
        );
    }
    zMax
    {
        type cyclic;
        neighbourPatch zMin;
        faces
        (
            (7 6 2 3)
        );
    }
);

// ************************************************************************* //


